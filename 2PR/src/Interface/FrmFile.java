/*
 * Instituto Tecnológico de Costa Rica
 * 2da Tarea Programada de RIT 2do Semestre 2013
 * Profesor: Jose Enrique Araya Monge
 * Estudiantes:
 * Jorge Vivas
 * Emanuel Avendaño
 */

package Interface;
import Business.BusinessLogic;
import java.awt.image.BufferedImage;
import java.io.*;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.concurrent.Executor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author eavendano
 */
public class FrmFile extends javax.swing.JFrame {

    /**
     * Creates new form FrmFile
     */
    
    private JFileChooser _FileChooser;
    private File SelectFile;
    private BusinessLogic _BusinessLogic;
    Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
    int _PrefijoConsulta = 0;
    

    public FrmFile() {
        initComponents();
        _FilePath.setText("/home/eavendano/Escritorio/man");
        _FileChooser = new JFileChooser();
        _FileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        _BusinessLogic = new BusinessLogic();
        this.lblImg.setVisible(false);
        //this.pnlImageIcon.add(picLabel);
        //this.pnlImageIcon.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnAbrir = new javax.swing.JButton();
        _FilePath = new javax.swing.JTextField();
        lblPalabra = new javax.swing.JLabel();
        txfPalabra = new javax.swing.JTextField();
        lblImg = new javax.swing.JLabel();
        btnAllPatterns = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        _FilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _FilePathActionPerformed(evt);
            }
        });

        lblPalabra.setText("Palabra");

        lblImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ajax-loader.gif"))); // NOI18N

        btnAllPatterns.setText("Ejecutar");
        btnAllPatterns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllPatternsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPalabra)
                    .addComponent(btnAbrir)
                    .addComponent(_FilePath, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addComponent(txfPalabra)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAllPatterns, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblImg)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnAbrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_FilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPalabra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAllPatterns)
                    .addComponent(lblImg))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        int returnValue = _FileChooser.showOpenDialog(FrmFile.this);
        if (returnValue == _FileChooser.APPROVE_OPTION) {
            SelectFile = _FileChooser.getSelectedFile();
            _FilePath.setText(SelectFile.toString());
        }
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void _FilePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__FilePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__FilePathActionPerformed

    private void btnAllPatternsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllPatternsActionPerformed
        // TODO add your handling code here:
        this.btnAllPatterns.setEnabled(false);
        lblImg.setVisible(true);
        
        if(!_FilePath.getText().equals("")){
            if(!txfPalabra.getText().equals("")){                
                String[] tokenPattern = txfPalabra.getText().split(" ");                
                _BusinessLogic.setDirectoryPath(_FilePath.getText());
                int cantidadPatrones = tokenPattern.length;
                _PrefijoConsulta++;
                ArrayList<BusinessLogic> array = new ArrayList<BusinessLogic>();
                for(int i = 0; i < tokenPattern.length;i++){ 
                    
                    _BusinessLogic = new BusinessLogic();
                    _BusinessLogic.setDirectoryPath(_FilePath.getText());
                    _BusinessLogic.setPatronUsuario(tokenPattern[i]);

                try {
                    String executionResult = _BusinessLogic.EjecutarPatrones(_PrefijoConsulta,cantidadPatrones);
                    if(this._BusinessLogic.getProcessOperationState() == 1){                        
                        array.add(_BusinessLogic);
                        //JOptionPane.showMessageDialog(rootPane, executionResult, "Finalizacion de la busqueda.", 1);
                        //FrmSearchResult frmSearchResult = new FrmSearchResult();
                        //frmSearchResult.setMatchesInFileLIne(this._BusinessLogic.getMatchesInFileLIne());
                        //frmSearchResult.InsertResult(this._BusinessLogic.getMatchLineInfo());
                        //frmSearchResult.setVisible(true);                        
                    } else {
                        JOptionPane.showMessageDialog(rootPane, executionResult, "Finalizacion de la busqueda.", 1);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(FrmFile.class.getName()).log(Level.SEVERE, null, ex);
                    ex.printStackTrace();
                }
                
                }
                _BusinessLogic = new BusinessLogic();
                ArrayList<String> nombresArchivos = new ArrayList<String>();
                if(array.get(0)._PatronSimpleControl.getFiles().size() > 0){
                    nombresArchivos = array.get(0)._PatronSimpleControl.NOMBRES_ARCHIVOS_SIM;
                } else if(array.get(0)._PatronOpcionesControl.getFiles().size() > 0){
                    nombresArchivos = array.get(0)._PatronOpcionesControl.NOMBRES_ARCHIVOS_SIM;
                } else if(array.get(0)._DinamicaControl.getFiles().size() > 0){
                    nombresArchivos = array.get(0)._DinamicaControl.NOMBRES_ARCHIVOS_SIM;
                }
                double similitudSimple = 0.0;
                double similitudOpciones = 0.0;
                double similitudDinamica = 0.0;                
                int counter = 0;
                HashMap<String,Float> hashResultado = new HashMap<String,Float>();
                for (int i = 0; i < nombresArchivos.size(); i++) {
                    int contadorPatron = 0;
                    //sumatoria = 0;
                    String fileName = nombresArchivos.get(i);                    
                    for (int j = 0; j < array.size(); j++) {  
                        int valor = array.get(j)._PatronUsado;
                        switch(valor){
                            case 1:
                                    if(array.get(j)._PatronSimpleControl.getFiles().contains(fileName)){
                                        int positionSimple = array.get(j)._PatronSimpleControl.getFiles().indexOf(fileName);
                                        similitudSimple = array.get(j)._PatronSimpleControl.getSimilitud().get(positionSimple);                                        
                                        int counterPerDoc = array.get(j)._PatronSimpleControl.getCounter().get(positionSimple);
                                        //System.out.println("Patron " + array.get(j)._PatronUsado);
                                        counter += counterPerDoc;
                                        contadorPatron++;
                                        //System.out.println("Cont " + contadorPatron);
                                    }
                                    break;
                            case 2:
                                    if(array.get(j)._PatronOpcionesControl.getFiles().contains(fileName)){
                                        int positionSimple = array.get(j)._PatronOpcionesControl.getFiles().indexOf(fileName);
                                        similitudOpciones = array.get(j)._PatronOpcionesControl.getSimilitud().get(positionSimple);
                                        int counterPerDoc = array.get(j)._PatronOpcionesControl.getCounter().get(positionSimple);
                                        counter += counterPerDoc;
                                        //System.out.println("Patron " + array.get(j)._PatronUsado);
                                        contadorPatron++;
                                        //System.out.println("Cont " + contadorPatron);
                                    }
                                    break;
                            case 3:
                                    if(array.get(j)._DinamicaControl.getFiles().contains(fileName)){
                                        int positionSimple = array.get(j)._DinamicaControl.getFiles().indexOf(fileName);
                                        similitudDinamica = array.get(j)._DinamicaControl.getSimilitud().get(positionSimple);
                                        int counterPerDoc = array.get(j)._DinamicaControl.getCounter().get(positionSimple);
                                        counter += counterPerDoc;
                                        //System.out.println("Patron " + array.get(j)._PatronUsado);
                                        contadorPatron++;
                                        //System.out.println("Cont " + contadorPatron);
                                    }
                                    break;
                        }
                        //System.out.println("Cont " + contadorPatron);
                        double suma = similitudSimple + similitudOpciones + similitudDinamica;                                                
                    float divi = (float) 1 / cantidadPatrones;                        
                    float similitud = contadorPatron + (float)(divi * suma);                                                
                    hashResultado.put(fileName,similitud);
                    if(contadorPatron > 0){
                        System.out.println("Suma " + similitudSimple +  " " + similitudOpciones + " "  + similitudDinamica);
                        //System.out.println("Sumatoria " + sumatoria);
                        //System.out.println("Sumado " + suma);
                        //System.out.println("Patrones " + this._BusinessLogic._CantidadPatrones);
                        //System.out.println("Patrones2 " + cantidadPatrones);
                        //System.out.println("Division " + divi);
                        //System.out.println("El contador es " + contadorPatron);
                        System.out.println("Similitud del archivo " + fileName + " es " + similitud);                        
                    }
                    }
                    
                    //contadorPatron = 0;
                }
            }else {
                JOptionPane.showMessageDialog(rootPane, "Digite la palabra o patron que desea buscar.");
                _PrefijoConsulta--;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar el campo del directorio.");
            _PrefijoConsulta--;
        }
        this.btnAllPatterns.setEnabled(true);
        lblImg.setVisible(false);
        
    }//GEN-LAST:event_btnAllPatternsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField _FilePath;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnAllPatterns;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel lblImg;
    private javax.swing.JLabel lblPalabra;
    private javax.swing.JTextField txfPalabra;
    // End of variables declaration//GEN-END:variables
}
